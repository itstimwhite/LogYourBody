import{j as e}from"./ui-vendor-BTNJdHiL.js";import{a as o}from"./react-vendor-CGPzL8fz.js";import{o as z,C as I,b as P,d as k,f as A,a as u,j as d,B as v,x as a}from"./index-BWixOZri.js";import{H as E,j as B,O as y,h as F,d as G,S as W,a8 as J,G as L}from"./utils-vendor-BD55slVq.js";function Q(){const{isAvailable:r,isAuthorized:i,loading:b,error:m,requestPermissions:w,getHealthData:N,getWeightHistory:S,syncToDatabase:D}=z(),[p,h]=o.useState({}),[l,n]=o.useState(!1),[j,H]=o.useState(null),[c,T]=o.useState([]);o.useEffect(()=>{if(l){const s=setInterval(()=>{},5e3);return()=>clearInterval(s)}},[l]);const C=async()=>{n(!0);const s={timestamp:new Date().toISOString(),platform:d()?"iOS":"Non-iOS",available:r,authorized:i,error:m};try{console.log("🔍 HealthKit Debug: Starting permission test...");const t=await w();s.permissionGranted=t,a({title:t?"Permissions Granted":"Permissions Denied",description:t?"HealthKit permissions were successfully granted":"HealthKit permissions were denied or not available",variant:t?"default":"destructive"})}catch(t){s.permissionError=t.message,console.error("🚨 Permission test error:",t),a({title:"Permission Test Failed",description:t.message,variant:"destructive"})}h(t=>({...t,permissions:s})),n(!1)},O=async()=>{if(!r||!i){a({title:"Cannot Test Data",description:"HealthKit is not available or not authorized",variant:"destructive"});return}n(!0);try{console.log("📊 HealthKit Debug: Testing data retrieval...");const s=await N();H(s);const t=new Date,x=new Date;x.setDate(x.getDate()-30);const g=await S(x,t);T(g),h(R=>({...R,data:{timestamp:new Date().toISOString(),healthData:s,weightHistoryCount:g.length,success:!0}})),a({title:"Data Test Complete",description:`Retrieved ${g.length} weight entries`})}catch(s){console.error("🚨 Data test error:",s),h(t=>({...t,data:{timestamp:new Date().toISOString(),error:s.message,success:!1}})),a({title:"Data Test Failed",description:s.message,variant:"destructive"})}n(!1)},K=async()=>{if(!r||!i){a({title:"Cannot Test Sync",description:"HealthKit is not available or not authorized",variant:"destructive"});return}n(!0);try{console.log("🔄 HealthKit Debug: Testing database sync...");const s=await D();h(t=>({...t,sync:{timestamp:new Date().toISOString(),result:s}})),a({title:s.success?"Sync Successful":"Sync Failed",description:s.success?`Synced ${s.weightEntries||0} weight entries`:s.error||"Unknown sync error",variant:s.success?"default":"destructive"})}catch(s){console.error("🚨 Sync test error:",s),a({title:"Sync Test Failed",description:s.message,variant:"destructive"})}n(!1)},f=(s,t)=>e.jsxs(u,{variant:s?"default":"secondary",className:"ml-2",children:[s?e.jsx(L,{className:"mr-1 h-3 w-3"}):e.jsx(y,{className:"mr-1 h-3 w-3"}),t]});return e.jsx("div",{className:"space-y-4",children:e.jsxs(I,{className:"border-border bg-secondary/30",children:[e.jsx(P,{children:e.jsxs(k,{className:"flex items-center text-lg",children:[e.jsx(E,{className:"mr-2 h-5 w-5 text-primary"}),"HealthKit Debug & Testing"]})}),e.jsxs(A,{className:"space-y-4",children:[e.jsxs("div",{className:"space-y-2",children:[e.jsx("h4",{className:"font-medium",children:"Current Status"}),e.jsxs("div",{className:"flex flex-wrap gap-2",children:[e.jsxs(u,{variant:d()?"default":"secondary",children:["Platform: ",d()?"iOS":"Non-iOS"]}),f(r,"Available"),f(i,"Authorized"),b&&e.jsxs(u,{variant:"outline-solid",children:[e.jsx(B,{className:"mr-1 h-3 w-3 animate-spin"}),"Loading"]}),m&&e.jsxs(u,{variant:"destructive",children:[e.jsx(y,{className:"mr-1 h-3 w-3"}),"Error"]})]}),m&&e.jsx("div",{className:"rounded border border-destructive/20 bg-destructive/10 p-2 text-sm text-destructive",children:m})]}),e.jsxs("div",{className:"space-y-3",children:[e.jsx("h4",{className:"font-medium",children:"Test Actions"}),e.jsxs("div",{className:"flex flex-wrap gap-2",children:[e.jsxs(v,{onClick:C,disabled:l||!d(),size:"sm",variant:"outline-solid",children:[e.jsx(F,{className:"mr-2 h-4 w-4"}),"Test Permissions"]}),e.jsxs(v,{onClick:O,disabled:l||!r||!i,size:"sm",variant:"outline-solid",children:[e.jsx(G,{className:"mr-2 h-4 w-4"}),"Test Data Retrieval"]}),e.jsxs(v,{onClick:K,disabled:l||!r||!i,size:"sm",variant:"outline-solid",children:[e.jsx(W,{className:"mr-2 h-4 w-4"}),"Test Database Sync"]})]}),!d()&&e.jsxs("div",{className:"rounded border border-orange-200 bg-orange-50 p-2 text-sm text-orange-700",children:[e.jsx(J,{className:"mr-1 inline h-4 w-4"}),"HealthKit is only available on iOS devices. These tests will not work on web or other platforms."]})]}),j&&e.jsxs("div",{className:"space-y-2",children:[e.jsx("h4",{className:"font-medium",children:"Retrieved Health Data"}),e.jsx("div",{className:"rounded border bg-muted/30 p-3 text-sm",children:e.jsx("pre",{className:"whitespace-pre-wrap",children:JSON.stringify(j,null,2)})})]}),c.length>0&&e.jsxs("div",{className:"space-y-2",children:[e.jsxs("h4",{className:"font-medium",children:["Weight History (",c.length," entries)"]}),e.jsxs("div",{className:"max-h-40 overflow-y-auto rounded border bg-muted/30 p-3 text-sm",children:[c.slice(0,10).map((s,t)=>e.jsxs("div",{className:"flex justify-between border-b border-muted py-1 last:border-b-0",children:[e.jsx("span",{children:new Date(s.date).toLocaleDateString()}),e.jsxs("span",{children:[s.value," ",s.unit]})]},t)),c.length>10&&e.jsxs("div",{className:"pt-2 text-center text-muted-foreground",children:["... and ",c.length-10," more entries"]})]})]}),Object.keys(p).length>0&&e.jsxs("div",{className:"space-y-2",children:[e.jsx("h4",{className:"font-medium",children:"Test Results"}),e.jsx("div",{className:"max-h-60 overflow-y-auto rounded border bg-muted/30 p-3 text-sm",children:e.jsx("pre",{className:"whitespace-pre-wrap",children:JSON.stringify(p,null,2)})})]})]})]})})}export{Q as H};
