export interface CapacitorHealthkitPlugin {
    requestAuthorization(options: RequestAuthorizationOptions): Promise<void>;
    isAvailable(): Promise<void>;
    getAuthorizationStatus(options: GetAuthorizationStatusOptions): Promise<{
        status: AuthorizationStatus;
    }>;
    getStatisticsCollection(options: StatisticsCollectionOptions): Promise<StatisticsCollectionOutput>;
    getBodyMassEntries(options: BodyMassQueryOptions): Promise<BodyMassQueryOutput>;
    getWorkouts(options: WorkoutsQueryOptions): Promise<WorkoutsQueryOutput>;
}
export interface RequestAuthorizationOptions {
    all?: string[];
    read?: string[];
    write?: string[];
}
export interface GetAuthorizationStatusOptions {
    sampleType: string;
}
export type AuthorizationStatus = 'notDetermined' | 'sharingDenied' | 'sharingAuthorized';
export interface StatisticsCollectionOptions {
    startDate: string;
    endDate?: string;
    anchorDate: string;
    interval: StatisticsCollectionQueryInterval;
    quantityTypeSampleName: QuantityType;
}
export interface WorkoutsQueryOptions {
    startDate: string;
    endDate?: string;
    limit?: number;
}
export interface BodyMassQueryOptions {
    startDate: string;
    endDate?: string;
    limit?: number;
}
export interface StatisticsCollectionOutput {
    data: {
        startDate: string;
        endDate: string;
        value: number;
    }[];
}
export interface BodyMassQueryOutput {
    data: {
        date: string;
        value: number;
        unit: string;
        uuid: string;
        sourceName: string;
        sourceBundleId: string;
    }[];
}
export interface WorkoutsQueryOutput {
    data: {
        uuid: string;
        startDate: string;
        endDate: string;
        duration: number;
        device?: HealthKitDevice;
        source: string;
        sourceBundleId: string;
        workoutActivityType: string;
        workoutActivityTypeId: number;
        totalEnergyBurned?: number;
        totalDistance?: number;
        totalFlightsClimbed?: number;
        totalSwimmingStrokeCount?: number;
    }[];
}
export interface HealthKitDevice {
    name?: string;
    model?: string;
    manufacturer?: string;
    hardwareVersion?: string;
    softwareVersion?: string;
    firmwareVersion?: string;
    localIdentifier?: string;
    udiDeviceIdentifier?: string;
}
export interface StatisticsCollectionQueryInterval {
    unit: 'second' | 'minute' | 'hour' | 'day' | 'month' | 'year';
    value: number;
}
export type QuantityType = 'stepCount';
export type ActivityType = 'archery' | 'bowling' | 'fencing' | 'gymnastics' | 'trackAndField' | 'americanFootball' | 'australianFootball' | 'baseball' | 'basketball' | 'cricket' | 'discSports' | 'handball' | 'hockey' | 'lacrosse' | 'rugby' | 'soccer' | 'softball' | 'volleyball' | 'preparationAndRecovery' | 'flexibility' | 'cooldown' | 'walking' | 'running' | 'wheelchairWalkPace' | 'wheelchairRunPace' | 'cycling' | 'handCycling' | 'coreTraining' | 'elliptical' | 'functionalStrengthTraining' | 'traditionalStrengthTraining' | 'crossTraining' | 'mixedCardio' | 'highIntensityIntervalTraining' | 'jumpRope' | 'stairClimbing' | 'stairs' | 'stepTraining' | 'fitnessGaming' | 'barre' | 'cardioDance' | 'socialDance' | 'yoga' | 'mindAndBody' | 'pilates' | 'badminton' | 'pickleball' | 'racquetball' | 'squash' | 'tableTennis' | 'tennis' | 'climbing' | 'equestrianSports' | 'fishing' | 'golf' | 'hiking' | 'hunting' | 'play' | 'crossCountrySkiing' | 'curling' | 'downhillSkiing' | 'snowSports' | 'snowboarding' | 'skatingSports' | 'paddleSports' | 'rowing' | 'sailing' | 'surfingSports' | 'swimming' | 'waterFitness' | 'waterPolo' | 'waterSports' | 'boxing' | 'kickboxing' | 'martialArts' | 'taiChi' | 'wrestling' | 'dance' | 'danceInspiredTraining' | 'mixedMetabolicCardioTraining' | 'swimBikeRun' | 'transition' | 'other';
