{"version":3,"file":"web.js","sourceRoot":"","sources":["../../src/web.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,SAAS,EAAE,MAAM,iBAAiB,CAAC;AAc5C,MAAM,OAAO,qBACX,SAAQ,SAAS;IAGjB,KAAK,CAAC,IAAI;QACR,MAAM,IAAI,KAAK,CAAC,yBAAyB,CAAC,CAAC;IAC7C,CAAC;IAED,KAAK,CAAC,oBAAoB;QACxB,MAAM,IAAI,KAAK,CAAC,yBAAyB,CAAC,CAAC;IAC7C,CAAC;IAED,KAAK,CAAC,WAAW;QACf,MAAM,IAAI,KAAK,CAAC,yBAAyB,CAAC,CAAC;IAC7C,CAAC;IAED,KAAK,CAAC,sBAAsB,CAC1B,OAAsC;QAEtC,OAAO,CAAC,GAAG,CAAC,EAAE,OAAO,EAAE,CAAC,CAAC;QACzB,MAAM,IAAI,KAAK,CAAC,yBAAyB,CAAC,CAAC;IAC7C,CAAC;IAED,KAAK,CAAC,uBAAuB,CAC3B,OAAoC;QAEpC,OAAO,CAAC,GAAG,CAAC,EAAE,OAAO,EAAE,CAAC,CAAC;QACzB,MAAM,IAAI,KAAK,CAAC,yBAAyB,CAAC,CAAC;IAC7C,CAAC;IAED,KAAK,CAAC,kBAAkB,CAAC,OAA6B;QACpD,OAAO,CAAC,GAAG,CAAC,EAAE,OAAO,EAAE,CAAC,CAAC;QACzB,MAAM,IAAI,KAAK,CAAC,yBAAyB,CAAC,CAAC;IAC7C,CAAC;IAED,KAAK,CAAC,WAAW,CAAC,OAA6B;QAC7C,OAAO,CAAC,GAAG,CAAC,EAAE,OAAO,EAAE,CAAC,CAAC;QACzB,MAAM,IAAI,KAAK,CAAC,yBAAyB,CAAC,CAAC;IAC7C,CAAC;CACF","sourcesContent":["import { WebPlugin } from '@capacitor/core';\n\nimport type {\n  AuthorizationStatus,\n  CapacitorHealthkitPlugin,\n  GetAuthorizationStatusOptions,\n  WorkoutsQueryOptions,\n  StatisticsCollectionOptions,\n  BodyMassQueryOptions,\n  StatisticsCollectionOutput,\n  WorkoutsQueryOutput,\n  BodyMassQueryOutput,\n} from './definitions';\n\nexport class CapacitorHealthkitWeb\n  extends WebPlugin\n  implements CapacitorHealthkitPlugin\n{\n  async echo(): Promise<void> {\n    throw new Error('Method not implemented.');\n  }\n\n  async requestAuthorization(): Promise<void> {\n    throw new Error('Method not implemented.');\n  }\n\n  async isAvailable(): Promise<void> {\n    throw new Error('Method not implemented.');\n  }\n\n  async getAuthorizationStatus(\n    options: GetAuthorizationStatusOptions,\n  ): Promise<{ status: AuthorizationStatus }> {\n    console.log({ options });\n    throw new Error('Method not implemented.');\n  }\n\n  async getStatisticsCollection(\n    options: StatisticsCollectionOptions,\n  ): Promise<StatisticsCollectionOutput> {\n    console.log({ options });\n    throw new Error('Method not implemented.');\n  }\n\n  async getBodyMassEntries(options: BodyMassQueryOptions): Promise<BodyMassQueryOutput> {\n    console.log({ options });\n    throw new Error('Method not implemented.');\n  }\n\n  async getWorkouts(options: WorkoutsQueryOptions): Promise<WorkoutsQueryOutput> {\n    console.log({ options });\n    throw new Error('Method not implemented.');\n  }\n}\n"]}