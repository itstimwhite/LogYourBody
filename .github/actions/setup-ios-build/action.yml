name: 'Setup iOS Build Environment'
description: 'Common setup steps for iOS builds'
inputs:
  xcode-version:
    description: 'Xcode version to use'
    required: false
    default: '16.1'
  install-swiftlint:
    description: 'Install SwiftLint'
    required: false
    default: 'true'
  setup-ruby:
    description: 'Setup Ruby and Bundler'
    required: false
    default: 'true'
  create-config-files:
    description: 'Create placeholder config files'
    required: false
    default: 'true'

runs:
  using: 'composite'
  steps:
    - name: Setup Xcode
      uses: maxim-lobanov/setup-xcode@v1
      with:
        xcode-version: ${{ inputs.xcode-version }}
    
    - name: Cache Homebrew
      if: inputs.install-swiftlint == 'true'
      uses: actions/cache@v4
      with:
        path: |
          /opt/homebrew/bin/swiftlint
          /opt/homebrew/bin/xcbeautify
          /opt/homebrew/Cellar/swiftlint
          /opt/homebrew/Cellar/xcbeautify
        key: ${{ runner.os }}-homebrew-tools-${{ inputs.xcode-version }}
        restore-keys: |
          ${{ runner.os }}-homebrew-tools-
    
    - name: Install SwiftLint and xcbeautify
      if: inputs.install-swiftlint == 'true'
      shell: bash
      run: |
        export PATH="/opt/homebrew/bin:$PATH"
        if ! command -v swiftlint &> /dev/null; then
          echo "Installing SwiftLint..."
          brew install swiftlint
        else
          echo "SwiftLint already installed"
        fi
        if ! command -v xcbeautify &> /dev/null; then
          echo "Installing xcbeautify..."
          brew install xcbeautify
        else
          echo "xcbeautify already installed"
        fi
    
    - name: Setup Ruby and Bundler
      if: inputs.setup-ruby == 'true'
      shell: bash
      run: |
        cd apps/ios
        gem install bundler:2.4.10
        bundle config path vendor/bundle
        bundle install --jobs 4 --retry 3
    
    - name: Create placeholder config files
      if: inputs.create-config-files == 'true'
      shell: bash
      run: |
        cd apps/ios
        
        # Create Supabase config
        echo "// CI Placeholder" > Supabase.xcconfig
        echo "SUPABASE_URL = https://placeholder.supabase.co" >> Supabase.xcconfig
        echo "SUPABASE_ANON_KEY = placeholder-key" >> Supabase.xcconfig
        
        # Create LogYourBody config
        echo "// CI Placeholder" > LogYourBody/Config.xcconfig
        echo "CLERK_PUBLISHABLE_KEY = placeholder-clerk-key" >> LogYourBody/Config.xcconfig