name: Visual Regression Tests

on:
  push:
    branches: [dev, preview, main]
  pull_request:
    branches: [dev, preview, main]

jobs:
  visual-tests:
    name: Visual Regression Testing
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          
      - name: Install dependencies
        run: npm ci
        
      - name: Install Playwright Browsers
        run: npx playwright install --with-deps
        
      # Download baseline screenshots from the last successful build
      - name: Download baseline screenshots
        uses: actions/download-artifact@v4
        with:
          name: playwright-screenshots
          path: tests/e2e/__screenshots__
        continue-on-error: true
        
      # Set up environment variables for the test
      - name: Setup environment
        run: |
          cat > .env.local << EOF
          NEXT_PUBLIC_SUPABASE_URL=${{ secrets.NEXT_PUBLIC_SUPABASE_URL }}
          NEXT_PUBLIC_SUPABASE_ANON_KEY=${{ secrets.NEXT_PUBLIC_SUPABASE_ANON_KEY }}
          EOF
          
      # Run Playwright tests
      - name: Run Playwright tests
        run: npx playwright test
        env:
          CI: true
          
      # Upload test results
      - name: Upload Playwright report
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: playwright-report
          path: playwright-report/
          retention-days: 30
          
      # Upload screenshots as artifacts for future comparisons
      - name: Upload screenshots
        uses: actions/upload-artifact@v4
        if: success()
        with:
          name: playwright-screenshots
          path: tests/e2e/__screenshots__/
          retention-days: 90
          
      # Comment on PR with visual regression results
      - name: Comment PR
        uses: actions/github-script@v7
        if: github.event_name == 'pull_request' && failure()
        with:
          script: |
            const fs = require('fs');
            const path = require('path');
            
            let comment = '## 🎨 Visual Regression Test Results\n\n';
            comment += '❌ Visual differences detected! Please review the changes.\n\n';
            comment += 'Download the [Playwright report](https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}) to see the visual differences.\n\n';
            comment += '### Affected Screenshots:\n';
            
            // Try to read test results if available
            try {
              const reportPath = 'playwright-report/index.html';
              if (fs.existsSync(reportPath)) {
                comment += '- See the uploaded artifacts for detailed comparison\n';
              }
            } catch (e) {
              comment += '- Check the action logs for details\n';
            }
            
            comment += '\n**Note:** Visual regression tests use a 0.1% pixel difference threshold.';
            
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: comment
            })
            
      # Add status check
      - name: Create status check
        if: always()
        uses: actions/github-script@v7
        with:
          script: |
            const state = '${{ job.status }}' === 'success' ? 'success' : 'failure';
            const description = state === 'success' 
              ? 'All visual regression tests passed' 
              : 'Visual differences detected';
              
            if (context.payload.pull_request) {
              github.rest.repos.createCommitStatus({
                owner: context.repo.owner,
                repo: context.repo.repo,
                sha: context.payload.pull_request.head.sha,
                state: state,
                description: description,
                context: 'Visual Regression Tests'
              });
            }