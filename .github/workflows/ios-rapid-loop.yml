name: iOS Rapid Loop

on:
  push:
    branches: [dev]
    paths:
      - 'apps/ios/**'
      - '.github/workflows/ios-rapid-loop.yml'
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  rapid-checks:
    name: Rapid Checks
    runs-on: macos-14
    timeout-minutes: 15
    outputs:
      short_sha: ${{ steps.build-info.outputs.short_sha }}
      timestamp: ${{ steps.build-info.outputs.timestamp }}
      build_number: ${{ steps.build-info.outputs.build_number }}
    
    steps:
    - uses: actions/checkout@v5
    
    - name: Setup iOS build environment
      uses: ./.github/actions/setup-ios-build
      with:
        xcode-version: '16.1'
        setup-ruby: 'true'
        create-config-files: 'true'
    
    - name: Cache Swift packages and DerivedData
      uses: actions/cache@v4
      with:
        path: |
          apps/ios/.build
          ~/Library/Developer/Xcode/DerivedData
          ~/Library/Caches/org.swift.swiftpm
        key: ${{ runner.os }}-spm-xcode-16.1-${{ hashFiles('**/Package.resolved', '**/project.pbxproj') }}
        restore-keys: |
          ${{ runner.os }}-spm-xcode-16.1-
          ${{ runner.os }}-spm-
    
    - name: Generate build info
      id: build-info
      run: |
        SHORT_SHA=$(echo ${{ github.sha }} | cut -c1-7)
        TIMESTAMP=$(date -u +%Y%m%d%H%M%S)
        echo "short_sha=$SHORT_SHA" >> $GITHUB_OUTPUT
        echo "timestamp=$TIMESTAMP" >> $GITHUB_OUTPUT
        echo "build_number=$TIMESTAMP" >> $GITHUB_OUTPUT
    
    - name: Run SwiftLint
      run: |
        cd apps/ios
        bundle exec fastlane lint
    
    - name: Quick build check
      run: |
        cd apps/ios
        # Use Fastlane for consistent build process with automatic log collation
        bundle exec fastlane build_check