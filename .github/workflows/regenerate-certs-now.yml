name: Regenerate Certificates Now

on:
  workflow_dispatch:

jobs:
  regenerate:
    name: Regenerate Certificates
    runs-on: macos-14
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup iOS build environment
        uses: ./.github/actions/setup-ios-build
        with:
          xcode-version: '15.4'

      - name: Setup Ruby and install dependencies
        uses: ./.github/actions/setup-ruby-bundler
        with:
          working-directory: apps/ios
          cache-key-prefix: 'regenerate-certs'

      - name: Nuke existing certificates
        working-directory: apps/ios
        env:
          MATCH_PASSWORD: ${{ secrets.MATCH_PASSWORD }}
          MATCH_GIT_URL: ${{ secrets.MATCH_GIT_URL }}
          MATCH_GIT_BASIC_AUTHORIZATION: ${{ secrets.MATCH_GIT_BASIC_AUTHORIZATION }}
          MATCH_GIT_BRANCH: ${{ secrets.MATCH_GIT_BRANCH || 'main' }}
          APP_STORE_CONNECT_API_KEY_ID: ${{ secrets.APP_STORE_CONNECT_API_KEY_ID }}
          APP_STORE_CONNECT_API_KEY_ISSUER_ID: ${{ secrets.APP_STORE_CONNECT_API_KEY_ISSUER_ID }}
          APP_STORE_CONNECT_API_KEY: ${{ secrets.APP_STORE_CONNECT_API_KEY }}
          APPLE_TEAM_ID: ${{ secrets.APPLE_TEAM_ID }}
        run: |
          echo "üî• Nuking all existing certificates..."
          
          # Run the nuke_all_certs lane
          bundle exec fastlane nuke_all_certs || echo "Some certificates may not have existed"
          
          echo "‚úÖ Certificate nuking complete!"

      - name: Clean certificates repository
        env:
          MATCH_GIT_URL: ${{ secrets.MATCH_GIT_URL }}
          MATCH_GIT_BASIC_AUTHORIZATION: ${{ secrets.MATCH_GIT_BASIC_AUTHORIZATION }}
          MATCH_GIT_BRANCH: ${{ secrets.MATCH_GIT_BRANCH || 'main' }}
        run: |
          echo "üóëÔ∏è Cleaning certificates repository..."
          
          # Extract the auth token from base64
          AUTH_HEADER=$(echo $MATCH_GIT_BASIC_AUTHORIZATION | base64 -d)
          
          # Clone with authentication
          cd /tmp
          rm -rf certificates-temp
          git clone https://${AUTH_HEADER}@github.com/itstimwhite/certificates.git certificates-temp
          cd certificates-temp
          git checkout $MATCH_GIT_BRANCH || git checkout -b $MATCH_GIT_BRANCH
          
          # Clean all certificate files
          rm -rf certs profiles
          mkdir -p certs profiles
          touch certs/.gitkeep profiles/.gitkeep
          
          # Commit and push
          git add -A
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git config user.name "GitHub Actions"
          git commit -m "Clean repository for certificate regeneration" || echo "Nothing to commit"
          git push origin $MATCH_GIT_BRANCH
          
          cd -
          rm -rf /tmp/certificates-temp
          
          echo "‚úÖ Repository cleaned!"

      - name: Regenerate all certificates
        working-directory: apps/ios
        env:
          MATCH_PASSWORD: ${{ secrets.MATCH_PASSWORD }}
          MATCH_GIT_URL: ${{ secrets.MATCH_GIT_URL }}
          MATCH_GIT_BASIC_AUTHORIZATION: ${{ secrets.MATCH_GIT_BASIC_AUTHORIZATION }}
          MATCH_GIT_BRANCH: ${{ secrets.MATCH_GIT_BRANCH || 'main' }}
          APP_STORE_CONNECT_API_KEY_ID: ${{ secrets.APP_STORE_CONNECT_API_KEY_ID }}
          APP_STORE_CONNECT_API_KEY_ISSUER_ID: ${{ secrets.APP_STORE_CONNECT_API_KEY_ISSUER_ID }}
          APP_STORE_CONNECT_API_KEY: ${{ secrets.APP_STORE_CONNECT_API_KEY }}
          APPLE_TEAM_ID: ${{ secrets.APPLE_TEAM_ID }}
        run: |
          echo "üöÄ Starting certificate regeneration..."
          
          # Use the regenerate_profiles lane which handles everything
          bundle exec fastlane regenerate_profiles
          
          echo "‚úÖ Certificate regeneration complete!"

      - name: Test certificates with Match
        working-directory: apps/ios
        env:
          MATCH_PASSWORD: ${{ secrets.MATCH_PASSWORD }}
          MATCH_GIT_URL: ${{ secrets.MATCH_GIT_URL }}
          MATCH_GIT_BASIC_AUTHORIZATION: ${{ secrets.MATCH_GIT_BASIC_AUTHORIZATION }}
          MATCH_GIT_BRANCH: ${{ secrets.MATCH_GIT_BRANCH || 'main' }}
          APP_STORE_CONNECT_API_KEY_ID: ${{ secrets.APP_STORE_CONNECT_API_KEY_ID }}
          APP_STORE_CONNECT_API_KEY_ISSUER_ID: ${{ secrets.APP_STORE_CONNECT_API_KEY_ISSUER_ID }}
          APP_STORE_CONNECT_API_KEY: ${{ secrets.APP_STORE_CONNECT_API_KEY }}
          APPLE_TEAM_ID: ${{ secrets.APPLE_TEAM_ID }}
        run: |
          echo "üß™ Testing certificate sync..."
          
          # Test that we can sync certificates in readonly mode
          bundle exec fastlane setup_provisioning type:appstore readonly:true
          
          echo "‚úÖ Certificates verified!"

      - name: Summary
        if: always()
        run: |
          echo "## Certificate Regeneration Summary"
          echo ""
          if [ "${{ job.status }}" == "success" ]; then
            echo "‚úÖ Certificates regenerated successfully!"
            echo ""
            echo "Next steps:"
            echo "1. Test the build workflow to ensure certificates work"
            echo "2. Monitor the monthly regeneration workflow"
          else
            echo "‚ùå Certificate regeneration failed"
            echo "Please check the logs above for details"
          fi