name: Fix CodeQL Issues with Claude

on:
  workflow_dispatch:
  schedule:
    # Run daily at 2 AM UTC
    - cron: '0 2 * * *'
  workflow_run:
    workflows: ["CodeQL Analysis"]
    types:
      - completed

jobs:
  check-and-fix:
    name: Check and Fix CodeQL Issues
    runs-on: ubuntu-latest
    if: ${{ github.event_name == 'workflow_dispatch' || github.event_name == 'schedule' || github.event.workflow_run.conclusion == 'failure' }}
    
    steps:
    - uses: actions/checkout@v4
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
    
    - name: Get CodeQL Results
      id: codeql-results
      uses: actions/github-script@v7
      with:
        script: |
          // Get the latest CodeQL scan results
          const { data: alerts } = await github.rest.codeScanning.listAlertsForRepo({
            owner: context.repo.owner,
            repo: context.repo.repo,
            state: 'open',
            per_page: 100
          });
          
          if (alerts.length === 0) {
            console.log('No open CodeQL alerts found');
            return { hasIssues: false };
          }
          
          // Group alerts by rule and file
          const groupedAlerts = {};
          alerts.forEach(alert => {
            const key = `${alert.rule.id}-${alert.most_recent_instance.location.path}`;
            if (!groupedAlerts[key]) {
              groupedAlerts[key] = {
                rule: alert.rule,
                file: alert.most_recent_instance.location.path,
                alerts: []
              };
            }
            groupedAlerts[key].alerts.push(alert);
          });
          
          return {
            hasIssues: true,
            alertCount: alerts.length,
            groupedAlerts: groupedAlerts
          };
    
    - name: Setup Claude CLI
      if: steps.codeql-results.outputs.hasIssues == 'true'
      run: |
        # Install Claude CLI
        npm install -g @anthropic/claude-cli
        
        # Configure Claude with API key
        echo "CLAUDE_API_KEY=${{ secrets.CLAUDE_API_KEY }}" >> $GITHUB_ENV
    
    - name: Fix CodeQL Issues
      if: steps.codeql-results.outputs.hasIssues == 'true'
      id: fix-issues
      run: |
        # Create a prompt file for Claude
        cat > codeql-fix-prompt.md << 'EOF'
        You are a code security expert. Analyze and fix the following CodeQL security issues.

        ## CodeQL Alerts Summary
        ${{ steps.codeql-results.outputs.alertCount }} open security alerts found.

        ## Detailed Alerts
        ${{ steps.codeql-results.outputs.groupedAlerts }}

        ## Instructions
        1. For each alert, analyze the security issue
        2. Provide a fix that addresses the security concern
        3. Ensure the fix doesn't break existing functionality
        4. Follow the project's coding standards
        5. For each fix, explain what the issue was and how your fix addresses it

        ## Important Guidelines
        - Only fix actual security issues, not style preferences
        - Preserve all existing functionality
        - Add appropriate input validation and sanitization
        - Use secure coding practices
        - Document any security-critical changes

        Please provide fixes in a format that can be easily applied.
        EOF
        
        # Run Claude to generate fixes
        claude code fix \
          --prompt-file codeql-fix-prompt.md \
          --model claude-3-opus-20240229 \
          --max-tokens 4000 \
          --output fixes.json
    
    - name: Apply Fixes
      if: steps.codeql-results.outputs.hasIssues == 'true'
      run: |
        # Parse and apply the fixes from Claude
        # This would need a custom script to parse Claude's output and apply changes
        python3 << 'EOF'
        import json
        import os
        
        # Read the fixes from Claude
        with open('fixes.json', 'r') as f:
            fixes = json.load(f)
        
        # Apply each fix
        for fix in fixes.get('fixes', []):
            file_path = fix['file']
            if os.path.exists(file_path):
                with open(file_path, 'r') as f:
                    content = f.read()
                
                # Apply the fix (this is simplified - real implementation would be more robust)
                new_content = content.replace(fix['old_code'], fix['new_code'])
                
                with open(file_path, 'w') as f:
                    f.write(new_content)
                
                print(f"Fixed {file_path}: {fix['description']}")
        EOF
    
    - name: Create Pull Request
      if: steps.codeql-results.outputs.hasIssues == 'true'
      uses: peter-evans/create-pull-request@v5
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        commit-message: "fix: resolve CodeQL security issues"
        title: "ðŸ”’ Fix CodeQL Security Issues"
        body: |
          ## ðŸ¤– Automated Security Fixes
          
          This PR was automatically generated to fix CodeQL security issues.
          
          ### Summary
          - Fixed ${{ steps.codeql-results.outputs.alertCount }} security alerts
          - Issues were analyzed and fixed by Claude AI
          
          ### Changes
          Please review the changes carefully before merging.
          
          ### Security Impact
          These changes address the following security concerns:
          - Input validation issues
          - Potential injection vulnerabilities
          - Insecure data handling
          
          ---
          *Generated by CodeQL Fix workflow*
        branch: fix/codeql-security-issues
        delete-branch: true
        labels: |
          security
          automated
          codeql