name: Vercel Production Deployment

on:
  push:
    branches: [main]

env:
  NODE_VERSION: '20'

jobs:
  deploy-production:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run linting
        run: npm run lint

      - name: Run type checking
        run: npm run typecheck

      - name: Run tests
        run: npm test

      - name: Install Vercel CLI
        run: npm install --global vercel@latest

      - name: Pull Vercel Environment Information
        run: vercel pull --yes --environment=production --token=${{ secrets.VERCEL_TOKEN }}
        env:
          VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
          VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}

      - name: Build Project Artifacts
        run: |
          # Export environment variables from the downloaded .env file
          set -a
          source .vercel/.env.production.local || true
          set +a
          
          # Run the build
          vercel build --prod --token=${{ secrets.VERCEL_TOKEN }}
        env:
          VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
          VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}

      - name: Deploy to Production
        id: deploy
        run: |
          echo "Deploying prebuilt artifacts to Production..."
          
          # Deploy to production
          if vercel deploy --prebuilt --prod --token=${{ secrets.VERCEL_TOKEN }} > deploy.output 2>&1; then
            DEPLOYMENT_URL=$(cat deploy.output | tail -1)
            echo "deployment-url=$DEPLOYMENT_URL" >> $GITHUB_OUTPUT
            echo "✅ Production deployment initiated: $DEPLOYMENT_URL"
            
            # Verify deployment
            echo "Verifying deployment..."
            vercel inspect $DEPLOYMENT_URL --token=${{ secrets.VERCEL_TOKEN }} || true
          else
            echo "❌ Deployment command failed"
            echo "Error output:"
            cat deploy.output
            exit 1
          fi
        env:
          VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
          VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}

      - name: Create deployment notification
        uses: actions/github-script@v7
        with:
          script: |
            const { data: deployment } = await github.rest.repos.createDeployment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              ref: context.sha,
              environment: 'production',
              required_contexts: [],
              auto_merge: false
            });
            
            await github.rest.repos.createDeploymentStatus({
              owner: context.repo.owner,
              repo: context.repo.repo,
              deployment_id: deployment.id,
              state: 'success',
              environment_url: 'https://logyourbody.vercel.app',
              description: 'Deployed to production'
            });