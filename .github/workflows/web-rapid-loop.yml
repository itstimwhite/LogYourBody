name: Web Rapid Loop

on:
  push:
    branches: [dev]
    paths:
      - 'apps/web/**'
      - 'packages/**'
      - '.github/workflows/web-rapid-loop.yml'
  workflow_dispatch:

env:
  VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
  VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}

jobs:
  rapid-checks:
    name: Rapid Checks
    runs-on: ubuntu-latest
    timeout-minutes: 5
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Run rapid checks
      run: |
        echo "🚀 Running rapid checks for web..."
        
        # Lint (parallel)
        npm run lint &
        LINT_PID=$!
        
        # Type check (parallel)
        npm run typecheck &
        TYPE_PID=$!
        
        # Skip unit tests for now - they need fixing
        # TODO: Re-enable once tests are fixed
        # npm run test &
        # TEST_PID=$!
        
        # Wait for all parallel jobs
        wait $LINT_PID || (echo "❌ Lint failed" && exit 1)
        wait $TYPE_PID || (echo "❌ Type check failed" && exit 1)
        # wait $TEST_PID || (echo "❌ Unit tests failed" && exit 1)
        
        echo "✅ All rapid checks passed!"
    
    - name: Generate build info
      id: build-info
      run: |
        SHORT_SHA=$(echo ${{ github.sha }} | cut -c1-7)
        TIMESTAMP=$(date -u +%Y%m%d%H%M%S)
        echo "short_sha=$SHORT_SHA" >> $GITHUB_OUTPUT
        echo "timestamp=$TIMESTAMP" >> $GITHUB_OUTPUT
        echo "build_id=${TIMESTAMP}-${SHORT_SHA}" >> $GITHUB_OUTPUT

  # TODO: Re-enable once Clerk secrets are configured
  # deploy-alpha:
  #   name: Deploy to Vercel Alpha
  #   needs: rapid-checks
  #   runs-on: ubuntu-latest
  #   timeout-minutes: 5
  #   environment:
  #     name: development
  #     url: ${{ steps.deploy.outputs.url }}
  #   
  #   steps:
  #   - uses: actions/checkout@v4
  #   
  #   - name: Install Vercel CLI
  #     run: npm install --global vercel@latest
  #   
  #   - name: Pull Vercel Environment
  #     run: vercel pull --yes --environment=preview --token=${{ secrets.VERCEL_TOKEN }}
  #   
  #   - name: Build Project
  #     run: vercel build --prod --token=${{ secrets.VERCEL_TOKEN }}
  #     env:
  #       NEXT_PUBLIC_SUPABASE_URL: ${{ secrets.NEXT_PUBLIC_SUPABASE_URL }}
  #       NEXT_PUBLIC_SUPABASE_ANON_KEY: ${{ secrets.NEXT_PUBLIC_SUPABASE_ANON_KEY }}
  #       NEXT_PUBLIC_CLERK_PUBLISHABLE_KEY: ${{ secrets.NEXT_PUBLIC_CLERK_PUBLISHABLE_KEY || 'pk_test_placeholder' }}
  #       CLERK_SECRET_KEY: ${{ secrets.CLERK_SECRET_KEY || 'sk_test_placeholder' }}
  #       NEXT_PUBLIC_API_URL: ${{ vars.NEXT_PUBLIC_API_URL || 'http://localhost:3000' }}
  #   
  #   - name: Deploy to Vercel
  #     id: deploy
  #     run: |
  #       DEPLOYMENT_URL=$(vercel deploy --prebuilt --prod --token=${{ secrets.VERCEL_TOKEN }})
  #       echo "url=$DEPLOYMENT_URL" >> $GITHUB_OUTPUT
  #       
  #       # Set alias for latest dev build
  #       vercel alias set $DEPLOYMENT_URL dev-latest.logyourbody.com --token=${{ secrets.VERCEL_TOKEN }}
  #       
  #       echo "✅ Deployed to: $DEPLOYMENT_URL"
  #       echo "✅ Alias: https://dev-latest.logyourbody.com"
  #   
  #   - name: Comment deployment URL
  #     uses: actions/github-script@v7
  #     with:
  #       script: |
  #         const url = '${{ steps.deploy.outputs.url }}';
  #         const shortSha = '${{ needs.rapid-checks.outputs.short_sha }}';
  #         const timestamp = '${{ needs.rapid-checks.outputs.timestamp }}';
  #         
  #         const body = `🚀 **Web Alpha Deployed!**
  #         
  #         - **URL**: ${url}
  #         - **Alias**: https://dev-latest.logyourbody.com
  #         - **Build**: ${timestamp}-${shortSha}
  #         - **Time**: < 5 minutes ⚡
  #         
  #         This is an alpha build for rapid testing. Full tests run nightly on preview.`;
  #         
  #         github.rest.repos.createCommitComment({
  #           owner: context.repo.owner,
  #           repo: context.repo.repo,
  #           commit_sha: context.sha,
  #           body: body
  #         });