name: CI

on:
  push:
    branches: [dev, preview, main]
  pull_request:
    branches: [dev, preview, main]

env:
  NODE_VERSION: '20'

jobs:
  test-and-build:
    name: Test & Build
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          
      - name: Cache dependencies
        uses: actions/cache@v4
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-
            
      - name: Install dependencies
        run: npm install
        
      - name: Run linting
        run: npm run lint
        
      - name: Run type checking
        run: npm run typecheck
        
      - name: Run tests
        run: npm test
        
      - name: Build application
        run: npm run build
        env:
          NEXT_PUBLIC_VERSION: ${{ github.sha }}

  # Auto-versioning only on direct pushes to branches (not PRs)
  auto-version:
    name: Auto Version
    runs-on: ubuntu-latest
    needs: test-and-build
    if: |
      github.event_name == 'push' && 
      (github.ref == 'refs/heads/dev' || github.ref == 'refs/heads/preview' || github.ref == 'refs/heads/main') &&
      github.actor != 'github-actions[bot]' &&
      !contains(github.event.head_commit.message, 'chore: bump version')
    permissions:
      contents: write
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}
          
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          
      - name: Configure Git
        run: |
          git config --local user.email "github-actions[bot]@users.noreply.github.com"
          git config --local user.name "github-actions[bot]"
          
      - name: Run version bump
        run: |
          node scripts/version-manager.cjs
          
      - name: Push changes
        run: |
          git push origin HEAD:${{ github.ref_name }}

  # Create PR from dev to preview after successful build
  create-pr-to-preview:
    name: Auto PR to Preview
    runs-on: ubuntu-latest
    needs: test-and-build
    if: |
      github.ref == 'refs/heads/dev' && 
      github.event_name == 'push' &&
      github.actor != 'github-actions[bot]'
    permissions:
      contents: write
      pull-requests: write
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          
      - name: Check for existing PR
        id: check-pr
        run: |
          PR_COUNT=$(gh pr list --base preview --head dev --state open --json number --jq '. | length')
          echo "count=$PR_COUNT" >> $GITHUB_OUTPUT
          
          if [ "$PR_COUNT" -gt 0 ]; then
            PR_NUMBER=$(gh pr list --base preview --head dev --state open --json number --jq '.[0].number')
            echo "number=$PR_NUMBER" >> $GITHUB_OUTPUT
            echo "✅ Found existing PR #$PR_NUMBER"
          fi
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          
      - name: Create Pull Request
        if: steps.check-pr.outputs.count == '0'
        id: create-pr
        run: |
          cat > pr-body.md << 'EOF'
          ## Automated Pull Request
          
          This PR was automatically created after successful tests on the dev branch.
          
          ### ✅ All Checks Passed
          - Tests: ✅ Passed
          - Build: ✅ Successful
          - Type checking: ✅ Passed
          - Linting: ✅ Passed
          
          ### 📋 Changes
          View commit history for detailed changes.
          
          ### 🤖 Auto-merge
          This PR will be automatically merged if all checks continue to pass.
          
          ---
          *This is an automated pull request created by GitHub Actions.*
          EOF
          
          PR_URL=$(gh pr create \
            --base preview \
            --head dev \
            --title "🚀 Auto-merge: dev → preview" \
            --body-file pr-body.md \
            --label "automated" \
            --label "dev-to-preview")
          
          PR_NUMBER=$(echo "$PR_URL" | grep -oE '[0-9]+$')
          echo "pr-number=$PR_NUMBER" >> $GITHUB_OUTPUT
          echo "✅ Created PR #$PR_NUMBER"
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          
      - name: Enable Auto-merge
        if: steps.check-pr.outputs.count == '0' && steps.create-pr.outputs.pr-number != ''
        run: |
          gh pr merge --auto --merge "${{ steps.create-pr.outputs.pr-number }}"
          echo "✅ Enabled auto-merge for PR #${{ steps.create-pr.outputs.pr-number }}"
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          
      - name: Update Existing PR
        if: steps.check-pr.outputs.count != '0'
        run: |
          gh pr comment ${{ steps.check-pr.outputs.number }} --body "🔄 Updated with latest changes from dev branch"
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  # Create PR from preview to main (requires manual approval)
  create-pr-to-main:
    name: PR to Main (Manual)
    runs-on: ubuntu-latest
    needs: test-and-build
    if: |
      github.ref == 'refs/heads/preview' && 
      github.event_name == 'push' &&
      github.actor != 'github-actions[bot]'
    permissions:
      contents: write
      pull-requests: write
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          
      - name: Check for existing PR
        id: check-pr
        run: |
          PR_COUNT=$(gh pr list --base main --head preview --state open --json number --jq '. | length')
          echo "count=$PR_COUNT" >> $GITHUB_OUTPUT
          
          if [ "$PR_COUNT" -gt 0 ]; then
            PR_NUMBER=$(gh pr list --base main --head preview --state open --json number --jq '.[0].number')
            echo "number=$PR_NUMBER" >> $GITHUB_OUTPUT
            echo "✅ Found existing PR #$PR_NUMBER"
          fi
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          
      - name: Create Pull Request
        if: steps.check-pr.outputs.count == '0'
        run: |
          cat > pr-body.md << 'EOF'
          ## Release Pull Request
          
          This PR was automatically created after successful tests on the preview branch.
          
          ### ✅ All Checks Passed
          - Tests: ✅ Passed
          - Build: ✅ Successful
          - Type checking: ✅ Passed
          - Linting: ✅ Passed
          
          ### 📋 Release Notes
          View commit history for detailed changes.
          
          ### ⚠️ Manual Review Required
          This PR requires manual review and approval before merging to production.
          
          ### Checklist
          - [ ] All features tested in preview environment
          - [ ] No breaking changes or proper migration plan in place
          - [ ] Performance impact assessed
          - [ ] Security implications reviewed
          
          ---
          *This is an automated pull request created by GitHub Actions.*
          EOF
          
          PR_URL=$(gh pr create \
            --base main \
            --head preview \
            --title "🚀 Release: preview → main" \
            --body-file pr-body.md \
            --label "release" \
            --label "preview-to-main")
          
          PR_NUMBER=$(echo "$PR_URL" | grep -oE '[0-9]+$')
          echo "✅ Created PR #$PR_NUMBER - Manual approval required"
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          
      - name: Update Existing PR
        if: steps.check-pr.outputs.count != '0'
        run: |
          gh pr comment ${{ steps.check-pr.outputs.number }} --body "🔄 Updated with latest changes from preview branch"
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  # Auto-merge Dependabot PRs if tests pass
  auto-merge-dependabot:
    name: Auto-merge Dependabot
    runs-on: ubuntu-latest
    needs: test-and-build
    if: github.actor == 'dependabot[bot]' && github.event_name == 'pull_request'
    permissions:
      contents: write
      pull-requests: write
    
    steps:
      - name: Dependabot metadata
        id: metadata
        uses: dependabot/fetch-metadata@v2
        with:
          github-token: "${{ secrets.GITHUB_TOKEN }}"
          
      - name: Auto-merge minor/patch updates
        if: steps.metadata.outputs.update-type == 'version-update:semver-minor' || steps.metadata.outputs.update-type == 'version-update:semver-patch'
        run: gh pr merge --auto --merge "$PR_URL"
        env:
          PR_URL: ${{ github.event.pull_request.html_url }}
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}